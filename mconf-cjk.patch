From 95e50c49d946358c01bac2ea04fb591858b864d4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=99=88=E7=94=9F=E6=9D=82=E7=89=A9=E6=88=BF?=
 <88823709+TC999@users.noreply.github.com>
Date: Tue, 11 Feb 2025 17:01:53 +0800
Subject: [PATCH 1/4] Update mconf.c

---
 scripts/kconfig/mconf.c | 352 ++++++++++++++++------------------------
 1 file changed, 144 insertions(+), 208 deletions(-)

diff --git a/scripts/kconfig/mconf.c b/scripts/kconfig/mconf.c
index 84ea9215c0a7ee..fd1b48921f3d3a 100644
--- a/scripts/kconfig/mconf.c
+++ b/scripts/kconfig/mconf.c
@@ -8,6 +8,7 @@
  * i18n, 2005, Arnaldo Carvalho de Melo <acme@conectiva.com.br>
  */
 
+#include <locale.h>
 #include <ctype.h>
 #include <errno.h>
 #include <fcntl.h>
@@ -26,260 +27,190 @@
 #include "mnconf-common.h"
 
 static const char mconf_readme[] =
-"Overview\n"
+"概述\n"
 "--------\n"
-"This interface lets you select features and parameters for the build.\n"
-"Features can either be built-in, modularized, or ignored. Parameters\n"
-"must be entered in as decimal or hexadecimal numbers or text.\n"
-"\n"
-"Menu items beginning with following braces represent features that\n"
-"  [ ] can be built in or removed\n"
-"  < > can be built in, modularized or removed\n"
-"  { } can be built in or modularized (selected by other feature)\n"
-"  - - are selected by other feature,\n"
-"while *, M or whitespace inside braces means to build in, build as\n"
-"a module or to exclude the feature respectively.\n"
-"\n"
-"To change any of these features, highlight it with the cursor\n"
-"keys and press <Y> to build it in, <M> to make it a module or\n"
-"<N> to remove it.  You may also press the <Space Bar> to cycle\n"
-"through the available options (i.e. Y->N->M->Y).\n"
-"\n"
-"Some additional keyboard hints:\n"
-"\n"
-"Menus\n"
-"----------\n"
-"o  Use the Up/Down arrow keys (cursor keys) to highlight the item you\n"
-"   wish to change or the submenu you wish to select and press <Enter>.\n"
-"   Submenus are designated by \"--->\", empty ones by \"----\".\n"
-"\n"
-"   Shortcut: Press the option's highlighted letter (hotkey).\n"
-"             Pressing a hotkey more than once will sequence\n"
-"             through all visible items which use that hotkey.\n"
+"本界面允许您为构建选择功能模块和参数。\n"
+"功能模块可设置为内置、模块化或忽略。参数需以十进制、\n"
+"十六进制数值或文本形式输入。\n"
 "\n"
-"   You may also use the <PAGE UP> and <PAGE DOWN> keys to scroll\n"
-"   unseen options into view.\n"
+"菜单项前缀符号含义说明：\n"
+" [ ] 表示该功能可内置或移除\n"
+" < > 表示该功能可内置、模块化或移除\n"
+" { } 表示该功能可内置或模块化（由其他功能决定）\n"
+" - - 表示该功能由其他功能选择\n"
+"括号内的符号含义：\n"
+" * 表示内置，M 表示模块化，空格表示排除该功能。\n"
 "\n"
-"o  To exit a menu use the cursor keys to highlight the <Exit> button\n"
-"   and press <ENTER>.\n"
+"修改功能状态：使用方向键高亮目标项，按<Y>内置，<M>模块化，\n"
+"<N>移除。亦可按空格键循环切换选项（顺序：Y→ N→ M→ Y）。\n"
 "\n"
-"   Shortcut: Press <ESC><ESC> or <E> or <X> if there is no hotkey\n"
-"             using those letters.  You may press a single <ESC>, but\n"
-"             there is a delayed response which you may find annoying.\n"
+"快捷操作提示：\n"
 "\n"
-"   Also, the <TAB> and cursor keys will cycle between <Select>,\n"
-"   <Exit>, <Help>, <Save>, and <Load>.\n"
+"菜单导航\n"
+"----------\n"
+"o 使用方向键高亮目标项或子菜单后按回车。带\"--->\"表示有子菜单，\n"
+" \"----\"表示空菜单。\n"
 "\n"
-"o  To get help with an item, use the cursor keys to highlight <Help>\n"
-"   and press <ENTER>.\n"
+" 快捷键：按选项高亮字母（热键）。重复按热键可在同名选项中轮转。\n"
 "\n"
-"   Shortcut: Press <H> or <?>.\n"
+" 使用<PAGE UP>/<PAGE DOWN>滚动查看未显示的选项。\n"
 "\n"
-"o  To toggle the display of hidden options, press <Z>.\n"
+"o 退出菜单：高亮<退出>后按回车。\n"
 "\n"
+" 快捷退出：连续按<ESC>，或<E>/<X>（若无热键冲突）。\n"
+" 单按<ESC>会有延迟响应。\n"
 "\n"
-"Radiolists  (Choice lists)\n"
-"-----------\n"
-"o  Use the cursor keys to select the option you wish to set and press\n"
-"   <S> or the <SPACE BAR>.\n"
+" 使用<TAB>和方向键可在<选择>, <退出>, <帮助>, <保存>, <加载>间切换。\n"
 "\n"
-"   Shortcut: Press the first letter of the option you wish to set then\n"
-"             press <S> or <SPACE BAR>.\n"
+"o 获取帮助：高亮<帮助>后按回车。\n"
 "\n"
-"o  To see available help for the item, use the cursor keys to highlight\n"
-"   <Help> and Press <ENTER>.\n"
+" 快捷键：按<H>或<?>。\n" "\n" "o 按<Z>切换显示隐藏选项。\n" "\n" "\n" "单选列表\n" "-----------\n" "o 使用方向键选择目标选项后按<S>或空格键确认。\n" "\n" " 快捷操作：先按选项首字母，再按<S>或空格。\n" "\n" "o 查看帮助：高亮<帮助>后按回车。\n" "\n" " 快捷键：按<H>或<?>。\n"
 "\n"
-"   Shortcut: Press <H> or <?>.\n"
+" 使用<TAB>和方向键可在<选择>和<帮助>间切换。\n"
 "\n"
-"   Also, the <TAB> and cursor keys will cycle between <Select> and\n"
-"   <Help>\n"
 "\n"
-"\n"
-"Data Entry\n"
+"数据输入\n"
 "-----------\n"
-"o  Enter the requested information and press <ENTER>\n"
-"   If you are entering hexadecimal values, it is not necessary to\n"
-"   add the '0x' prefix to the entry.\n"
+"o 输入内容后按回车确认。十六进制值无需添加'0x'前缀。\n"
 "\n"
-"o  For help, use the <TAB> or cursor keys to highlight the help option\n"
-"   and press <ENTER>.  You can try <TAB><H> as well.\n"
+"o 获取帮助：使用<TAB>或方向键高亮帮助选项后按回车，或尝试<TAB><H>组合键。\n"
 "\n"
 "\n"
-"Text Box    (Help Window)\n"
+"文本框（帮助窗口）\n"
 "--------\n"
-"o  Use the cursor keys to scroll up/down/left/right.  The VI editor\n"
-"   keys h,j,k,l function here as do <u>, <d>, <SPACE BAR> and <B> for\n"
-"   those who are familiar with less and lynx.\n"
+"o 使用方向键或VI编辑器键（h,j,k,l）滚动浏览，支持<u>, <d>, <空格>, <B>等类less/lynx操作。\n"
 "\n"
-"o  Press <E>, <X>, <q>, <Enter> or <Esc><Esc> to exit.\n"
+"o 按<E>, <X>, <q>, <回车>或<Esc>退出。\n"
 "\n"
 "\n"
-"Alternate Configuration Files\n"
+"多配置文件支持\n"
 "-----------------------------\n"
-"Menuconfig supports the use of alternate configuration files for\n"
-"those who, for various reasons, find it necessary to switch\n"
-"between different configurations.\n"
+"Menuconfig支持多配置文件切换，便于管理不同构建配置。\n"
+"\n"
+"使用<Save>保存当前配置至指定文件，<Load>加载历史配置。\n"
 "\n"
-"The <Save> button will let you save the current configuration to\n"
-"a file of your choosing.  Use the <Load> button to load a previously\n"
-"saved alternate configuration.\n"
+"即使误操作导致配置混乱，也可通过<Load>重新载入\".config\"恢复设置，无需重启界面。\n"
 "\n"
-"Even if you don't use alternate configuration files, but you find\n"
-"during a Menuconfig session that you have completely messed up your\n"
-"settings, you may use the <Load> button to restore your previously\n"
-"saved settings from \".config\" without restarting Menuconfig.\n"
 "\n"
-"Other information\n"
+"其他注意事项\n"
 "-----------------\n"
-"If you use Menuconfig in an XTERM window, make sure you have your\n"
-"$TERM variable set to point to an xterm definition which supports\n"
-"color.  Otherwise, Menuconfig will look rather bad.  Menuconfig will\n"
-"not display correctly in an RXVT window because rxvt displays only one\n"
-"intensity of color, bright.\n"
-"\n"
-"Menuconfig will display larger menus on screens or xterms which are\n"
-"set to display more than the standard 25 row by 80 column geometry.\n"
-"In order for this to work, the \"stty size\" command must be able to\n"
-"display the screen's current row and column geometry.  I STRONGLY\n"
-"RECOMMEND that you make sure you do NOT have the shell variables\n"
-"LINES and COLUMNS exported into your environment.  Some distributions\n"
-"export those variables via /etc/profile.  Some ncurses programs can\n"
-"become confused when those variables (LINES & COLUMNS) don't reflect\n"
-"the true screen size.\n"
-"\n"
-"Optional personality available\n"
+"o 在XTERM中使用时，请确保$TERM变量指向支持彩色的终端定义，否则显示异常。\n"
+" RXVT窗口因仅支持单色高亮，可能导致渲染问题。\n"
+"\n"
+"o 界面会自动适配大于25x80的屏幕尺寸，但需确保\"stty size\"能正确获取屏幕行列数。\n"
+" 强烈建议不要导出LINES和COLUMNS环境变量，某些ncurses程序可能因行列数不匹配出错。\n"
+"\n"
+"\n"
+"平铺菜单模式\n"
 "------------------------------\n"
-"If you prefer to have all of the options listed in a single menu,\n"
-"rather than the default multimenu hierarchy, run the menuconfig with\n"
-"MENUCONFIG_MODE environment variable set to single_menu. Example:\n"
+"若倾向所有选项平铺显示（非层级菜单），可通过设置环境变量启用：\n"
 "\n"
 "make MENUCONFIG_MODE=single_menu menuconfig\n"
 "\n"
-"<Enter> will then unroll the appropriate category, or enfold it if it\n"
-"is already unrolled.\n"
+"此模式下<回车>展开/折叠分类，注意可能增加CPU负载（尤其分类较多时）。\n"
 "\n"
-"Note that this mode can eventually be a little more CPU expensive\n"
-"(especially with a larger number of unrolled categories) than the\n"
-"default mode.\n"
 "\n"
-
-"Search\n"
+"搜索功能\n"
 "-------\n"
-"Pressing the forward-slash (/) anywhere brings up a search dialog box.\n"
+"任意界面按/键唤出搜索对话框。\n"
 "\n"
-
-"Different color themes available\n"
+"\n"
+"多配色主题\n"
 "--------------------------------\n"
-"It is possible to select different color themes using the variable\n"
-"MENUCONFIG_COLOR. To select a theme use:\n"
+"通过MENUCONFIG_COLOR变量切换主题：\n"
 "\n"
-"make MENUCONFIG_COLOR=<theme> menuconfig\n"
+"make MENUCONFIG_COLOR=<主题名> menuconfig\n"
 "\n"
-"Available themes are\n"
-" mono       => selects colors suitable for monochrome displays\n"
-" blackbg    => selects a color scheme with black background\n"
-" classic    => theme with blue background. The classic look\n"
-" bluetitle  => an LCD friendly version of classic. (default)\n"
+"可选主题：\n"
+" mono : 单色显示器优化\n"
+" blackbg : 黑底配色方案\n"
+" classic : 经典蓝底主题\n"
+" bluetitle : 默认LCD友好主题\n"
 "\n",
 menu_instructions[] =
-	"Arrow keys navigate the menu.  "
-	"<Enter> selects submenus ---> (or empty submenus ----).  "
-	"Highlighted letters are hotkeys.  "
-	"Pressing <Y> includes, <N> excludes, <M> modularizes features.  "
-	"Press <Esc><Esc> to exit, <?> for Help, </> for Search.  "
-	"Legend: [*] built-in  [ ] excluded  <M> module  < > module capable",
+	"使用方向键导航菜单。"
+	"<Enter> 选择子菜单 --->（或空子菜单 ----）。"
+	"高亮显示的字母是快捷键。"
+	"按 <Y> 包含，<N> 排除，<M> 模块化功能。"
+	"按 <Esc> 退出，<?> 获取帮助，</> 进行搜索。"
+	"图例：[*] 内置  [ ] 排除  <M> 模块  < > 可模块化",
 radiolist_instructions[] =
-	"Use the arrow keys to navigate this window or "
-	"press the hotkey of the item you wish to select "
-	"followed by the <SPACE BAR>. "
-	"Press <?> for additional information about this option.",
+	"使用方向键导航此窗口，或"
+	"按要选择的项目的快捷键，"
+	"然后按 <空格键>。"
+	"按 <?> 获取此选项的更多信息。",
 inputbox_instructions_int[] =
-	"Please enter a decimal value. "
-	"Fractions will not be accepted.  "
-	"Use the <TAB> key to move from the input field to the buttons below it.",
+	"请输入一个十进制值。"
+	"不接受分数。"
+	"使用 <Tab> 键从输入字段移动到下面的按钮。",
 inputbox_instructions_hex[] =
-	"Please enter a hexadecimal value. "
-	"Use the <TAB> key to move from the input field to the buttons below it.",
+	"请输入一个十六进制值。"
+	"使用 <Tab> 键从输入字段移动到下面的按钮。",
 inputbox_instructions_string[] =
-	"Please enter a string value. "
-	"Use the <TAB> key to move from the input field to the buttons below it.",
+	"请输入一个字符串值。"
+	"使用 <Tab> 键从输入字段移动到下面的按钮。",
 setmod_text[] =
-	"This feature depends on another which has been configured as a module.\n"
-	"As a result, this feature will be built as a module.",
+	"此功能依赖于另一个已配置为模块的功能。\n"
+	"因此，此功能将作为模块构建。",
 load_config_text[] =
-	"Enter the name of the configuration file you wish to load.  "
-	"Accept the name shown to restore the configuration you "
-	"last retrieved.  Leave blank to abort.",
+	"输入您希望加载的配置文件的名称。"
+	"接受显示的名称以恢复您上次检索的配置。"
+	"留空以中止。",
 load_config_help[] =
 	"\n"
-	"For various reasons, one may wish to keep several different\n"
-	"configurations available on a single machine.\n"
+	"由于各种原因，可能希望在一台机器上保留多个不同的配置。\n"
 	"\n"
-	"If you have saved a previous configuration in a file other than the\n"
-	"default one, entering its name here will allow you to modify that\n"
-	"configuration.\n"
+	"如果您已将先前的配置保存在非默认文件中，"
+	"在此输入其名称将允许您修改该配置。\n"
 	"\n"
-	"If you are uncertain, then you have probably never used alternate\n"
-	"configuration files. You should therefore leave this blank to abort.\n",
+	"如果您不确定，那么您可能从未使用过备用配置文件。"
+	"因此，您应留空以中止。\n",
 save_config_text[] =
-	"Enter a filename to which this configuration should be saved "
-	"as an alternate.  Leave blank to abort.",
+	"输入一个文件名，将此配置保存为备用配置。"
+	"留空以中止。",
 save_config_help[] =
 	"\n"
-	"For various reasons, one may wish to keep different configurations\n"
-	"available on a single machine.\n"
+	"由于各种原因，可能希望在一台机器上保留不同的配置。\n"
 	"\n"
-	"Entering a file name here will allow you to later retrieve, modify\n"
-	"and use the current configuration as an alternate to whatever\n"
-	"configuration options you have selected at that time.\n"
+	"在此输入文件名将允许您稍后检索、修改"
+	"并使用当前配置作为您当时选择的任何配置选项的备用。\n"
 	"\n"
-	"If you are uncertain what all this means then you should probably\n"
-	"leave this blank.\n",
+	"如果您不确定这意味着什么，那么您应留空。\n",
 search_help[] =
 	"\n"
-	"Search for symbols and display their relations.\n"
-	"Regular expressions are allowed.\n"
-	"Example: search for \"^FOO\"\n"
-	"Result:\n"
+	"搜索符号并显示它们的关系。\n"
+	"允许使用正则表达式。\n"
+	"示例：搜索 \"^FOO\"\n"
+	"结果：\n"
 	"-----------------------------------------------------------------\n"
-	"Symbol: FOO [=m]\n"
-	"Type  : tristate\n"
-	"Prompt: Foo bus is used to drive the bar HW\n"
-	"  Location:\n"
-	"    -> Bus options (PCI, PCMCIA, EISA, ISA)\n"
-	"      -> PCI support (PCI [=y])\n"
-	"(1)     -> PCI access mode (<choice> [=y])\n"
-	"  Defined at drivers/pci/Kconfig:47\n"
-	"  Depends on: X86_LOCAL_APIC && X86_IO_APIC\n"
-	"  Selects: LIBCRC32\n"
-	"  Selected by: BAR [=n]\n"
+	"符号: FOO [=m]\n"
+	"类型  : 三态\n"
+	"提示: Foo 总线用于驱动 bar 硬件\n"
+	"  位置:\n"
+	"    -> 总线选项 (PCI, PCMCIA, EISA, ISA)\n"
+	"      -> PCI 支持 (PCI [=y])\n"
+	"(1)     -> PCI 访问模式 (<choice> [=y])\n"
+	"  定义于 drivers/pci/Kconfig:47\n"
+	"  依赖于: X86_LOCAL_APIC && X86_IO_APIC\n"
+	"  选择: LIBCRC32\n"
+	"  被选择: BAR [=n]\n"
 	"-----------------------------------------------------------------\n"
-	"o The line 'Type:' shows the type of the configuration option for\n"
-	"  this symbol (bool, tristate, string, ...)\n"
-	"o The line 'Prompt:' shows the text used in the menu structure for\n"
-	"  this symbol\n"
-	"o The 'Defined at' line tells at what file / line number the symbol\n"
-	"  is defined\n"
-	"o The 'Depends on:' line tells what symbols need to be defined for\n"
-	"  this symbol to be visible in the menu (selectable)\n"
-	"o The 'Location:' lines tells where in the menu structure this symbol\n"
-	"  is located\n"
-	"    A location followed by a [=y] indicates that this is a\n"
-	"    selectable menu item - and the current value is displayed inside\n"
-	"    brackets.\n"
-	"    Press the key in the (#) prefix to jump directly to that\n"
-	"    location. You will be returned to the current search results\n"
-	"    after exiting this new menu.\n"
-	"o The 'Selects:' line tells what symbols will be automatically\n"
-	"  selected if this symbol is selected (y or m)\n"
-	"o The 'Selected by' line tells what symbol has selected this symbol\n"
+	"o '类型:' 行显示此符号的配置选项类型（布尔、三态、字符串等）\n"
+	"o '提示:' 行显示菜单结构中用于此符号的文本\n"
+	"o '定义于' 行显示符号定义的文件/行号\n"
+	"o '依赖于:' 行显示此符号在菜单中可见（可选）所需的符号\n"
+	"o '位置:' 行显示此符号在菜单结构中的位置\n"
+	"    后跟 [=y] 的位置表示这是一个可选的菜单项 - 当前值显示在括号内。\n"
+	"    按 (#) 前缀中的键直接跳转到该位置。退出此新菜单后，您将返回到当前搜索结果。\n"
+	"o '选择:' 行显示如果选择此符号（y 或 m）将自动选择的符号\n"
+	"o '被选择' 行显示选择此符号的符号\n"
 	"\n"
-	"Only relevant lines are shown.\n"
+	"仅显示相关行。\n"
 	"\n\n"
-	"Search examples:\n"
-	"Examples: USB	=> find all symbols containing USB\n"
-	"          ^USB => find all symbols starting with USB\n"
-	"          USB$ => find all symbols ending with USB\n"
+	"搜索示例：\n"
+	"示例: USB	=> 查找所有包含 USB 的符号\n"
+	"          ^USB => 查找所有以 USB 开头的符号\n"
+	"          USB$ => 查找所有以 USB 结尾的符号\n"
 	"\n";
 
 static int indent;
@@ -404,7 +335,7 @@ static void search_conf(void)
 	case 0:
 		break;
 	case 1:
-		show_helptext("Search Configuration", search_help);
+		show_helptext("搜索配置", search_help);
 		goto again;
 	default:
 		str_free(&title);
@@ -417,7 +348,7 @@ static void search_conf(void)
 		dialog_input += strlen(CONFIG_);
 
 	sttext = str_new();
-	str_printf(&sttext, "Search (%s)", dialog_input_result);
+	str_printf(&sttext, "搜索 (%s)", dialog_input_result);
 	stpart.text = str_get(&sttext);
 	list_add_tail(&stpart.entries, &trail);
 
@@ -432,7 +363,7 @@ static void search_conf(void)
 		jump_key_char = 0;
 		res = get_relations_str(sym_arr, &head);
 		set_subtitle();
-		dres = show_textbox_ext("Search Results", str_get(&res), 0, 0,
+		dres = show_textbox_ext("搜索结果", str_get(&res), 0, 0,
 					&vscroll, &hscroll,
 					handle_search_keys, &data);
 		again = false;
@@ -624,7 +555,7 @@ static void conf_choice(struct menu *menu)
 				item_set_tag('X');
 		}
 		dialog_clear();
-		res = dialog_checklist(prompt ? prompt : "Main Menu",
+		res = dialog_checklist(prompt ? prompt : "主目录",
 					radiolist_instructions,
 					MENUBOX_HEIGHT_MIN,
 					MENUBOX_WIDTH_MIN,
@@ -678,7 +609,7 @@ static void conf_string(struct menu *menu)
 			heading = "Internal mconf error!";
 		}
 		dialog_clear();
-		res = dialog_inputbox(prompt ? prompt : "Main Menu",
+		res = dialog_inputbox(prompt ? prompt : "主菜单",
 				      heading, 10, 75,
 				      sym_get_string_value(menu->sym));
 		switch (res) {
@@ -713,7 +644,7 @@ static void conf_load(void)
 				conf_set_changed(true);
 				return;
 			}
-			show_textbox(NULL, "File does not exist!", 5, 38);
+			show_textbox(NULL, "文件不存在！", 5, 38);
 			break;
 		case 1:
 			show_helptext("Load Alternate Configuration", load_config_help);
@@ -880,8 +811,8 @@ static int handle_exit(void)
 	dialog_clear();
 	if (conf_get_changed())
 		res = dialog_yesno(NULL,
-				   "Do you wish to save your new configuration?\n"
-				     "(Press <ESC><ESC> to continue kernel configuration.)",
+				   "您要保存新配置文件吗？\n"
+				     "(按 <ESC> 继续配置。)",
 				   6, 60);
 	else
 		res = -1;
@@ -892,8 +823,8 @@ static int handle_exit(void)
 	case 0:
 		if (conf_write(filename)) {
 			fprintf(stderr, "\n\n"
-					  "Error while writing of the configuration.\n"
-					  "Your configuration changes were NOT saved."
+					  "写入配置文件时出错。\n"
+					  "您的配置文件将不保存。"
 					  "\n\n");
 			return 1;
 		}
@@ -902,15 +833,15 @@ static int handle_exit(void)
 	case -1:
 		if (!silent)
 			printf("\n\n"
-				 "*** End of the configuration.\n"
-				 "*** Execute 'make' to start the build or try 'make help'."
+				 "*** 配置结束。\n"
+				 "*** 使用 'make' 开始编译或获取帮助 'make help'."
 				 "\n\n");
 		res = 0;
 		break;
 	default:
 		if (!silent)
 			fprintf(stderr, "\n\n"
-					  "Your configuration changes were NOT saved."
+					  "您的配置更改将不保存。"
 					  "\n\n");
 		if (res != KEY_ESC)
 			res = 0;
@@ -929,9 +860,14 @@ int main(int ac, char **av)
 	char *mode;
 	int res;
 
+	setlocale(LC_ALL, "C.UTF-8"); // 设置字符集为UTF-8
+	printf("mconf 中文显示修复\n");
+        wchar_t* s = L"你好，世界！"; // 使用宽字符类型
+        wprintf(L"输出: %ls\n", s); // 使用wprintf输出宽字符字符串
+
 	signal(SIGINT, sig_handler);
 
-	if (ac > 1 && strcmp(av[1], "-s") == 0) {
+	if (ac > 1 && strcmp(av[1]， "-s") == 0) {
 		silent = 1;
 		/* Silence conf_read() until the real callback is set up */
 		conf_set_message_callback(NULL);
@@ -947,8 +883,8 @@ int main(int ac, char **av)
 	}
 
 	if (init_dialog(NULL)) {
-		fprintf(stderr, "Your display is too small to run Menuconfig!\n");
-		fprintf(stderr, "It must be at least 19 lines by 80 columns.\n");
+		fprintf(stderr, "您的屏幕过小以运行 Menuconfig!\n");
++		fprintf(stderr, "至少需要 19 行 80 列。\n");
 		return 1;
 	}
 

From 9bac159c96983e32ad36d6bec5229bfad666b9c9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=99=88=E7=94=9F=E6=9D=82=E7=89=A9=E6=88=BF?=
 <88823709+TC999@users.noreply.github.com>
Date: Tue, 11 Feb 2025 17:03:16 +0800
Subject: [PATCH 2/4] Update menubox.c

---
 scripts/kconfig/lxdialog/menubox.c | 58 +++++++++++++++---------------
 1 file changed, 29 insertions(+), 29 deletions(-)

diff --git a/scripts/kconfig/lxdialog/menubox.c b/scripts/kconfig/lxdialog/menubox.c
index 6e6244df0c56e3..1bd10095d9b533 100644
--- a/scripts/kconfig/lxdialog/menubox.c
+++ b/scripts/kconfig/lxdialog/menubox.c
@@ -13,14 +13,14 @@
  *
  *    *)  A bugfix for the Page-Down problem
  *
- *    *)  Formerly when I used Page Down and Page Up, the cursor would be set
+ * *) Formerly when I used Page Down 和 Page Up, the cursor would be set
  *        to the first position in the menu box.  Now lxdialog is a bit
- *        smarter and works more like other menu systems (just have a look at
+ * smarter 和 works more like other menu systems (just have a look at
  *        it).
  *
  *    *)  Formerly if I selected something my scrolling would be broken because
  *        lxdialog is re-invoked by the Menuconfig shell script, can't
- *        remember the last scrolling position, and just sets it so that the
+ * remember the last scrolling position, 和 just sets it so that the
  *        cursor is at the bottom of the box.  Now it writes the temporary file
  *        lxdialog.scrltmp which contains this information. The file is
  *        deleted by lxdialog if the user leaves a submenu or enters a new
@@ -30,17 +30,17 @@
  *  [ 1998-06-14 ]
  *
  *    *)  Now lxdialog is crash-safe against broken "lxdialog.scrltmp" files
- *        and menus change their size on the fly.
+ * 和 menus change their size on the fly.
  *
  *    *)  If for some reason the last scrolling position is not saved by
  *        lxdialog, it sets the scrolling so that the selected item is in the
  *        middle of the menu box, not at the bottom.
  *
- * 02 January 1999, Michael Elizabeth Chastain (mec@shout.net)
+ *1999年1月02日, Michael Elizabeth Chastain (mec@shout.net)
  * Reset 'scroll' to 0 if the value from lxdialog.scrltmp is bogus.
  * This fixes a bug in Menuconfig where using ' ' to descend into menus
  * would leave mis-synchronized lxdialog.scrltmp files lying around,
- * fscanf would read in 'scroll', and eventually that value would get used.
+ * fscanf would read in 'scroll', 和 eventually that value would get used.
  */
 
 #include "dialog.h"
@@ -61,14 +61,14 @@ static void do_print_item(WINDOW * win, const char *item, int line_y,
 	j = first_alpha(menu_item, "YyNnMmHh");
 
 	/* Clear 'residue' of last item */
-	wattrset(win, dlg.menubox.atr);
+	wattrset(win, dlg.menubox。atr);
 	wmove(win, line_y, 0);
 	wclrtoeol(win);
-	wattrset(win, selected ? dlg.item_selected.atr : dlg.item.atr);
+	wattrset(win, selected ? dlg.item_selected。atr : dlg.item。atr);
 	mvwaddstr(win, line_y, item_x, menu_item);
 	if (hotkey) {
-		wattrset(win, selected ? dlg.tag_key_selected.atr
-			 : dlg.tag_key.atr);
+		wattrset(win, selected ? dlg.tag_key_selected。atr
+			 : dlg.tag_key。atr);
 		mvwaddch(win, line_y, item_x + j, menu_item[j]);
 	}
 	if (selected) {
@@ -97,11 +97,11 @@ static void print_arrows(WINDOW * win, int item_no, int scroll, int y, int x,
 	wmove(win, y, x);
 
 	if (scroll > 0) {
-		wattrset(win, dlg.uarrow.atr);
+		wattrset(win, dlg.uarrow。atr);
 		waddch(win, ACS_UARROW);
 		waddstr(win, "(-)");
 	} else {
-		wattrset(win, dlg.menubox.atr);
+		wattrset(win, dlg.menubox。atr);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
@@ -113,11 +113,11 @@ static void print_arrows(WINDOW * win, int item_no, int scroll, int y, int x,
 	wrefresh(win);
 
 	if ((height < item_no) && (scroll + height < item_no)) {
-		wattrset(win, dlg.darrow.atr);
+		wattrset(win, dlg.darrow。atr);
 		waddch(win, ACS_DARROW);
 		waddstr(win, "(+)");
 	} else {
-		wattrset(win, dlg.menubox_border.atr);
+		wattrset(win, dlg.menubox_border。atr);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
@@ -136,11 +136,11 @@ static void print_buttons(WINDOW * win, int height, int width, int selected)
 	int x = width / 2 - 28;
 	int y = height - 2;
 
-	print_button(win, "Select", y, x, selected == 0);
-	print_button(win, " Exit ", y, x + 12, selected == 1);
-	print_button(win, " Help ", y, x + 24, selected == 2);
-	print_button(win, " Save ", y, x + 36, selected == 3);
-	print_button(win, " Load ", y, x + 48, selected == 4);
+	print_button(win, " 选择 ", y, x, selected == 0);
+	print_button(win, " 退出 ", y, x + 12, selected == 1);
+	print_button(win, " 帮助 ", y, x + 24, selected == 2);
+	print_button(win, " 保存 ", y, x + 36, selected == 3);
+	print_button(win, " 加载 ", y, x + 48, selected == 4);
 
 	wmove(win, y, x + 1 + 12 * selected);
 	wrefresh(win);
@@ -190,20 +190,20 @@ int dialog_menu(const char *title, const char *prompt,
 	dialog = newwin(height, width, y, x);
 	keypad(dialog, TRUE);
 
-	draw_box(dialog, 0, 0, height, width,
-		 dlg.dialog.atr, dlg.border.atr);
-	wattrset(dialog, dlg.border.atr);
-	mvwaddch(dialog, height - 3, 0, ACS_LTEE);
+	draw_box(dialog, 0， 0, height, width,
+		 dlg.dialog。atr, dlg.border。atr);
+	wattrset(dialog, dlg.border。atr);
+	mvwaddch(dialog, height - 3， 0, ACS_LTEE);
 	for (i = 0; i < width - 2; i++)
 		waddch(dialog, ACS_HLINE);
-	wattrset(dialog, dlg.dialog.atr);
-	wbkgdset(dialog, dlg.dialog.atr & A_COLOR);
+	wattrset(dialog, dlg.dialog。atr);
+	wbkgdset(dialog, dlg.dialog。atr & A_COLOR);
 	waddch(dialog, ACS_RTEE);
 
 	print_title(dialog, title, width);
 
-	wattrset(dialog, dlg.dialog.atr);
-	print_autowrap(dialog, prompt, width - 2, 1, 3);
+	wattrset(dialog, dlg.dialog。atr);
+	print_autowrap(dialog, prompt, width - 2， 1， 3);
 
 	menu_width = width - 6;
 	box_y = height - menu_height - 5;
@@ -215,8 +215,8 @@ int dialog_menu(const char *title, const char *prompt,
 	keypad(menu, TRUE);
 
 	/* draw a box around the menu items */
-	draw_box(dialog, box_y, box_x, menu_height + 2, menu_width + 2,
-		 dlg.menubox_border.atr, dlg.menubox.atr);
+	draw_box(dialog, box_y, box_x, menu_height + 2, menu_width + 2，
+		 dlg.menubox_border。atr, dlg.menubox。atr);
 
 	if (menu_width >= 80)
 		item_x = (menu_width - 70) / 2;

From f3e71200938928b7de7ed54403ee66a543439f22 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=99=88=E7=94=9F=E6=9D=82=E7=89=A9=E6=88=BF?=
 <88823709+TC999@users.noreply.github.com>
Date: Tue, 11 Feb 2025 17:07:33 +0800
Subject: [PATCH 3/4] Update menubox.c

---
 scripts/kconfig/lxdialog/menubox.c | 36 +++++++++++++++---------------
 1 file changed, 18 insertions(+), 18 deletions(-)

diff --git a/scripts/kconfig/lxdialog/menubox.c b/scripts/kconfig/lxdialog/menubox.c
index 1bd10095d9b533..13a4648f506a31 100644
--- a/scripts/kconfig/lxdialog/menubox.c
+++ b/scripts/kconfig/lxdialog/menubox.c
@@ -13,9 +13,9 @@
  *
  *    *)  A bugfix for the Page-Down problem
  *
- * *) Formerly when I used Page Down 和 Page Up, the cursor would be set
+ * *) Formerly when I used Page Down and Page Up, the cursor would be set
  *        to the first position in the menu box.  Now lxdialog is a bit
- * smarter 和 works more like other menu systems (just have a look at
+ * smarter and works more like other menu systems (just have a look at
  *        it).
  *
  *    *)  Formerly if I selected something my scrolling would be broken because
@@ -30,13 +30,13 @@
  *  [ 1998-06-14 ]
  *
  *    *)  Now lxdialog is crash-safe against broken "lxdialog.scrltmp" files
- * 和 menus change their size on the fly.
+ * and menus change their size on the fly.
  *
  *    *)  If for some reason the last scrolling position is not saved by
  *        lxdialog, it sets the scrolling so that the selected item is in the
  *        middle of the menu box, not at the bottom.
  *
- *1999年1月02日, Michael Elizabeth Chastain (mec@shout.net)
+ * 1999年1月02日, Michael Elizabeth Chastain (mec@shout.net)
  * Reset 'scroll' to 0 if the value from lxdialog.scrltmp is bogus.
  * This fixes a bug in Menuconfig where using ' ' to descend into menus
  * would leave mis-synchronized lxdialog.scrltmp files lying around,
@@ -61,14 +61,14 @@ static void do_print_item(WINDOW * win, const char *item, int line_y,
 	j = first_alpha(menu_item, "YyNnMmHh");
 
 	/* Clear 'residue' of last item */
-	wattrset(win, dlg.menubox。atr);
+	wattrset(win, dlg.menubox.atr);
 	wmove(win, line_y, 0);
 	wclrtoeol(win);
-	wattrset(win, selected ? dlg.item_selected。atr : dlg.item。atr);
+	wattrset(win, selected ? dlg.item_selected.atr : dlg.item.atr);
 	mvwaddstr(win, line_y, item_x, menu_item);
 	if (hotkey) {
-		wattrset(win, selected ? dlg.tag_key_selected。atr
-			 : dlg.tag_key。atr);
+		wattrset(win, selected ? dlg.tag_key_selected.atr
+			 : dlg.tag_key.atr);
 		mvwaddch(win, line_y, item_x + j, menu_item[j]);
 	}
 	if (selected) {
@@ -97,11 +97,11 @@ static void print_arrows(WINDOW * win, int item_no, int scroll, int y, int x,
 	wmove(win, y, x);
 
 	if (scroll > 0) {
-		wattrset(win, dlg.uarrow。atr);
+		wattrset(win, dlg.uarrow.atr);
 		waddch(win, ACS_UARROW);
 		waddstr(win, "(-)");
 	} else {
-		wattrset(win, dlg.menubox。atr);
+		wattrset(win, dlg.menubox.atr);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
@@ -113,11 +113,11 @@ static void print_arrows(WINDOW * win, int item_no, int scroll, int y, int x,
 	wrefresh(win);
 
 	if ((height < item_no) && (scroll + height < item_no)) {
-		wattrset(win, dlg.darrow。atr);
+		wattrset(win, dlg.darrow.atr);
 		waddch(win, ACS_DARROW);
 		waddstr(win, "(+)");
 	} else {
-		wattrset(win, dlg.menubox_border。atr);
+		wattrset(win, dlg.menubox_border.atr);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
 		waddch(win, ACS_HLINE);
@@ -191,18 +191,18 @@ int dialog_menu(const char *title, const char *prompt,
 	keypad(dialog, TRUE);
 
 	draw_box(dialog, 0， 0, height, width,
-		 dlg.dialog。atr, dlg.border。atr);
-	wattrset(dialog, dlg.border。atr);
+		 dlg.dialog.atr, dlg.border.atr);
+	wattrset(dialog, dlg.border.atr);
 	mvwaddch(dialog, height - 3， 0, ACS_LTEE);
 	for (i = 0; i < width - 2; i++)
 		waddch(dialog, ACS_HLINE);
-	wattrset(dialog, dlg.dialog。atr);
-	wbkgdset(dialog, dlg.dialog。atr & A_COLOR);
+	wattrset(dialog, dlg.dialog.atr);
+	wbkgdset(dialog, dlg.dialog.atr & A_COLOR);
 	waddch(dialog, ACS_RTEE);
 
 	print_title(dialog, title, width);
 
-	wattrset(dialog, dlg.dialog。atr);
+	wattrset(dialog, dlg.dialog.atr);
 	print_autowrap(dialog, prompt, width - 2， 1， 3);
 
 	menu_width = width - 6;
@@ -216,7 +216,7 @@ int dialog_menu(const char *title, const char *prompt,
 
 	/* draw a box around the menu items */
 	draw_box(dialog, box_y, box_x, menu_height + 2, menu_width + 2，
-		 dlg.menubox_border。atr, dlg.menubox。atr);
+		 dlg.menubox_border.atr, dlg.menubox.atr);
 
 	if (menu_width >= 80)
 		item_x = (menu_width - 70) / 2;

From daa7c529c28f119ebc3487963d4080b8f1811db2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E9=99=88=E7=94=9F=E6=9D=82=E7=89=A9=E6=88=BF?=
 <88823709+TC999@users.noreply.github.com>
Date: Tue, 11 Feb 2025 17:08:50 +0800
Subject: [PATCH 4/4] Update menubox.c

---
 scripts/kconfig/lxdialog/menubox.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/scripts/kconfig/lxdialog/menubox.c b/scripts/kconfig/lxdialog/menubox.c
index 13a4648f506a31..282a702c869d28 100644
--- a/scripts/kconfig/lxdialog/menubox.c
+++ b/scripts/kconfig/lxdialog/menubox.c
@@ -190,10 +190,10 @@ int dialog_menu(const char *title, const char *prompt,
 	dialog = newwin(height, width, y, x);
 	keypad(dialog, TRUE);
 
-	draw_box(dialog, 0， 0, height, width,
+	draw_box(dialog, 0, 0, height, width,
 		 dlg.dialog.atr, dlg.border.atr);
 	wattrset(dialog, dlg.border.atr);
-	mvwaddch(dialog, height - 3， 0, ACS_LTEE);
+	mvwaddch(dialog, height - 3, 0, ACS_LTEE);
 	for (i = 0; i < width - 2; i++)
 		waddch(dialog, ACS_HLINE);
 	wattrset(dialog, dlg.dialog.atr);
@@ -203,7 +203,7 @@ int dialog_menu(const char *title, const char *prompt,
 	print_title(dialog, title, width);
 
 	wattrset(dialog, dlg.dialog.atr);
-	print_autowrap(dialog, prompt, width - 2， 1， 3);
+	print_autowrap(dialog, prompt, width - 2, 1, 3);
 
 	menu_width = width - 6;
 	box_y = height - menu_height - 5;
@@ -215,7 +215,7 @@ int dialog_menu(const char *title, const char *prompt,
 	keypad(menu, TRUE);
 
 	/* draw a box around the menu items */
-	draw_box(dialog, box_y, box_x, menu_height + 2, menu_width + 2，
+	draw_box(dialog, box_y, box_x, menu_height + 2, menu_width + 2,
 		 dlg.menubox_border.atr, dlg.menubox.atr);
 
 	if (menu_width >= 80)
